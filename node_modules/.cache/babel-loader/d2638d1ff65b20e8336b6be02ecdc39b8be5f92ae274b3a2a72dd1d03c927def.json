{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/flash_card_app-main/src/FlashCardsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Flashcard from './Flashcard';\nimport EditFlashcardModal from './EditFlashcardModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FlashCardsPage({\n  flashcards\n}) {\n  _s();\n  const [modifiedCards, setModifiedCards] = useState([]);\n  const [editingFlashcard, setEditingFlashcard] = useState(null);\n  const updateFlashcardStatus = (cardId, newStatus) => {\n    setModifiedCards(prevModifiedCards => [...prevModifiedCards, cardId]);\n  };\n  const onCardModified = cardId => {\n    console.log(`Card with ID ${cardId} was modified.`);\n  };\n  const handleEdit = flashcard => {\n    setEditingFlashcard(flashcard);\n  };\n  const handleDelete = cardId => {\n    // Remove the flashcard from the collection\n    // This logic should be implemented based on your data structure\n  };\n  const handleSaveEdit = (cardId, editedQuestion, editedAnswer) => {\n    // Save the edited content of the flashcard\n    // This logic should be implemented based on your data structure\n    setEditingFlashcard(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: [flashcards.map(flashcard => /*#__PURE__*/_jsxDEV(Flashcard, {\n      flashcard: flashcard,\n      updateFlashcardStatus: updateFlashcardStatus,\n      onCardModified: onCardModified,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, flashcard.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)), editingFlashcard && /*#__PURE__*/_jsxDEV(EditFlashcardModal, {\n      flashcard: editingFlashcard,\n      onSave: handleSaveEdit,\n      onClose: () => setEditingFlashcard(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashCardsPage, \"ZwQIswFlYpXhlOxKfIty4UtSiuE=\");\n_c = FlashCardsPage;\nvar _c;\n$RefreshReg$(_c, \"FlashCardsPage\");","map":{"version":3,"names":["React","useState","Flashcard","EditFlashcardModal","jsxDEV","_jsxDEV","FlashCardsPage","flashcards","_s","modifiedCards","setModifiedCards","editingFlashcard","setEditingFlashcard","updateFlashcardStatus","cardId","newStatus","prevModifiedCards","onCardModified","console","log","handleEdit","flashcard","handleDelete","handleSaveEdit","editedQuestion","editedAnswer","className","children","map","onEdit","onDelete","id","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onClose","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/flash_card_app-main/src/FlashCardsPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Flashcard from './Flashcard';\nimport EditFlashcardModal from './EditFlashcardModal';\n\nexport default function FlashCardsPage({ flashcards }) {\n  const [modifiedCards, setModifiedCards] = useState([]);\n  const [editingFlashcard, setEditingFlashcard] = useState(null);\n\n  const updateFlashcardStatus = (cardId, newStatus) => {\n    setModifiedCards((prevModifiedCards) => [...prevModifiedCards, cardId]);\n  };\n\n  const onCardModified = (cardId) => {\n    console.log(`Card with ID ${cardId} was modified.`);\n  };\n\n  const handleEdit = (flashcard) => {\n    setEditingFlashcard(flashcard);\n  };\n\n  const handleDelete = (cardId) => {\n    // Remove the flashcard from the collection\n    // This logic should be implemented based on your data structure\n  };\n\n  const handleSaveEdit = (cardId, editedQuestion, editedAnswer) => {\n    // Save the edited content of the flashcard\n    // This logic should be implemented based on your data structure\n    setEditingFlashcard(null);\n  };\n\n  return (\n    <div className=\"card-grid\">\n      {flashcards.map((flashcard) => (\n        <Flashcard\n          key={flashcard.id}\n          flashcard={flashcard}\n          updateFlashcardStatus={updateFlashcardStatus}\n          onCardModified={onCardModified}\n          onEdit={handleEdit}\n          onDelete={handleDelete}\n        />\n      ))}\n      {editingFlashcard && (\n        <EditFlashcardModal\n          flashcard={editingFlashcard}\n          onSave={handleSaveEdit}\n          onClose={() => setEditingFlashcard(null)}\n        />\n      )}\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMY,qBAAqB,GAAGA,CAACC,MAAM,EAAEC,SAAS,KAAK;IACnDL,gBAAgB,CAAEM,iBAAiB,IAAK,CAAC,GAAGA,iBAAiB,EAAEF,MAAM,CAAC,CAAC;EACzE,CAAC;EAED,MAAMG,cAAc,GAAIH,MAAM,IAAK;IACjCI,OAAO,CAACC,GAAG,CAAE,gBAAeL,MAAO,gBAAe,CAAC;EACrD,CAAC;EAED,MAAMM,UAAU,GAAIC,SAAS,IAAK;IAChCT,mBAAmB,CAACS,SAAS,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAIR,MAAM,IAAK;IAC/B;IACA;EAAA,CACD;EAED,MAAMS,cAAc,GAAGA,CAACT,MAAM,EAAEU,cAAc,EAAEC,YAAY,KAAK;IAC/D;IACA;IACAb,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,oBACEP,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvBpB,UAAU,CAACqB,GAAG,CAAEP,SAAS,iBACxBhB,OAAA,CAACH,SAAS;MAERmB,SAAS,EAAEA,SAAU;MACrBR,qBAAqB,EAAEA,qBAAsB;MAC7CI,cAAc,EAAEA,cAAe;MAC/BY,MAAM,EAAET,UAAW;MACnBU,QAAQ,EAAER;IAAa,GALlBD,SAAS,CAACU,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMlB,CACF,CAAC,EACDxB,gBAAgB,iBACfN,OAAA,CAACF,kBAAkB;MACjBkB,SAAS,EAAEV,gBAAiB;MAC5ByB,MAAM,EAAEb,cAAe;MACvBc,OAAO,EAAEA,CAAA,KAAMzB,mBAAmB,CAAC,IAAI;IAAE;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CAhDuBF,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}