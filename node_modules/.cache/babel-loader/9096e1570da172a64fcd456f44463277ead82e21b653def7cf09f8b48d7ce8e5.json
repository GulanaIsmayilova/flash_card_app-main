{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/flash_card_app-main/src/FlashCardsPage.js\",\n  _s = $RefreshSig$();\n// FlashCardsPage.js\n\nimport React, { useState } from 'react';\nimport Flashcard from './Flashcard';\nimport EditModal from './EditModal'; // Import the EditModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FlashCardsPage({\n  flashcards\n}) {\n  _s();\n  const [modifiedCards, setModifiedCards] = useState([]);\n  const [editCardId, setEditCardId] = useState(null); // New state to track the card being edited\n\n  const updateFlashcardStatus = (cardId, newStatus) => {\n    setModifiedCards(prevModifiedCards => [...prevModifiedCards, cardId]);\n  };\n  const onCardModified = cardId => {\n    console.log(`Card with ID ${cardId} was modified.`);\n    setEditCardId(null); // Reset edit state after modification\n  };\n  const onEdit = cardId => {\n    setEditCardId(cardId); // Set the cardId to be edited\n  };\n\n  // Add delete functionality here\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: flashcards.map(flashcard => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Flashcard, {\n        flashcard: flashcard,\n        updateFlashcardStatus: updateFlashcardStatus,\n        onCardModified: onCardModified,\n        onEdit: onEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), editCardId === flashcard.id && /*#__PURE__*/_jsxDEV(EditModal, {\n        flashcard: flashcard,\n        setEditCardId: setEditCardId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, flashcard.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashCardsPage, \"R7d/eHR8XV0VQmd1gn6Eibido/4=\");\n_c = FlashCardsPage;\nvar _c;\n$RefreshReg$(_c, \"FlashCardsPage\");","map":{"version":3,"names":["React","useState","Flashcard","EditModal","jsxDEV","_jsxDEV","FlashCardsPage","flashcards","_s","modifiedCards","setModifiedCards","editCardId","setEditCardId","updateFlashcardStatus","cardId","newStatus","prevModifiedCards","onCardModified","console","log","onEdit","className","children","map","flashcard","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/flash_card_app-main/src/FlashCardsPage.js"],"sourcesContent":["// FlashCardsPage.js\n\nimport React, { useState } from 'react';\nimport Flashcard from './Flashcard';\nimport EditModal from './EditModal'; // Import the EditModal component\n\nexport default function FlashCardsPage({ flashcards }) {\n  const [modifiedCards, setModifiedCards] = useState([]);\n  const [editCardId, setEditCardId] = useState(null); // New state to track the card being edited\n\n  const updateFlashcardStatus = (cardId, newStatus) => {\n    setModifiedCards((prevModifiedCards) => [...prevModifiedCards, cardId]);\n  };\n\n  const onCardModified = (cardId) => {\n    console.log(`Card with ID ${cardId} was modified.`);\n    setEditCardId(null); // Reset edit state after modification\n  };\n\n  const onEdit = (cardId) => {\n    setEditCardId(cardId); // Set the cardId to be edited\n  };\n\n  // Add delete functionality here\n\n  return (\n    <div className=\"card-grid\">\n      {flashcards.map((flashcard) => (\n        <React.Fragment key={flashcard.id}>\n          <Flashcard\n            flashcard={flashcard}\n            updateFlashcardStatus={updateFlashcardStatus}\n            onCardModified={onCardModified}\n            onEdit={onEdit}\n          />\n          {editCardId === flashcard.id && (\n            <EditModal flashcard={flashcard} setEditCardId={setEditCardId} />\n          )}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpD,MAAMY,qBAAqB,GAAGA,CAACC,MAAM,EAAEC,SAAS,KAAK;IACnDL,gBAAgB,CAAEM,iBAAiB,IAAK,CAAC,GAAGA,iBAAiB,EAAEF,MAAM,CAAC,CAAC;EACzE,CAAC;EAED,MAAMG,cAAc,GAAIH,MAAM,IAAK;IACjCI,OAAO,CAACC,GAAG,CAAE,gBAAeL,MAAO,gBAAe,CAAC;IACnDF,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMQ,MAAM,GAAIN,MAAM,IAAK;IACzBF,aAAa,CAACE,MAAM,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED;;EAEA,oBACET,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBf,UAAU,CAACgB,GAAG,CAAEC,SAAS,iBACxBnB,OAAA,CAACL,KAAK,CAACyB,QAAQ;MAAAH,QAAA,gBACbjB,OAAA,CAACH,SAAS;QACRsB,SAAS,EAAEA,SAAU;QACrBX,qBAAqB,EAAEA,qBAAsB;QAC7CI,cAAc,EAAEA,cAAe;QAC/BG,MAAM,EAAEA;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,EACDlB,UAAU,KAAKa,SAAS,CAACM,EAAE,iBAC1BzB,OAAA,CAACF,SAAS;QAACqB,SAAS,EAAEA,SAAU;QAACZ,aAAa,EAAEA;MAAc;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACjE;IAAA,GATkBL,SAAS,CAACM,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUjB,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CApCuBF,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}