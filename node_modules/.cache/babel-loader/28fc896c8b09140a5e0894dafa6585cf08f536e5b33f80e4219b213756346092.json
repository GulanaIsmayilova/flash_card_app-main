{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/flash_card_app-main/src/Flashcard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport EditFlashcardModal from './EditFlashcardModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Flashcard({\n  flashcard,\n  updateFlashcardStatus,\n  onCardModified,\n  onEdit\n}) {\n  _s();\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState('initial');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const frontEl = useRef();\n  const backEl = useRef();\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = backEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight, 100));\n  }\n  useEffect(setMaxHeight, [editedQuestion, flashcard.options, editedAnswer]);\n  useEffect(() => {\n    window.addEventListener('resize', setMaxHeight);\n    return () => window.removeEventListener('resize', setMaxHeight);\n  }, []);\n  const handleStatusChange = newStatus => {\n    updateFlashcardStatus(flashcard.id, newStatus);\n    onCardModified(flashcard.id);\n    let message = '';\n    switch (newStatus) {\n      case 'Learned':\n        message = 'Status: Learned';\n        break;\n      case 'Want to Learn':\n        message = 'Status: Want to Learn';\n        break;\n      case 'Noted':\n        message = 'Status: Noted';\n        break;\n      default:\n        message = '';\n    }\n    setStatusMessage(message);\n  };\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSaveEdit = (editedId, editedQuestion, editedAnswer) => {\n    // Implement your logic to save the edited question and answer\n    console.log(`Edited Flashcard ID: ${editedId}`);\n    console.log(`Edited Question: ${editedQuestion}`);\n    console.log(`Edited Answer: ${editedAnswer}`);\n\n    // Reset the editing state\n    setIsEditing(false);\n  };\n  const handleCancelEdit = () => {\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${flip ? 'flip' : ''}`,\n    style: {\n      height: height\n    },\n    onClick: () => setFlip(!flip),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"front\",\n      ref: frontEl,\n      children: isEditing ? /*#__PURE__*/_jsxDEV(EditFlashcardModal, {\n        flashcard: flashcard,\n        onSave: handleSaveEdit,\n        onClose: handleCancelEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-options\",\n          children: flashcard.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard-option\",\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Modified: \", flashcard.lastModified]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStatusChange('Learned'),\n            children: \"Learned\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStatusChange('Want to Learn'),\n            children: \"Want to Learn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStatusChange('Noted'),\n            children: \"Noted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEdit,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: statusMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back\",\n      ref: backEl,\n      children: flashcard.answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Flashcard, \"H8iIPTu269M43ts9ASxT9xwg33g=\");\n_c = Flashcard;\nvar _c;\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"names":["React","useRef","useState","useEffect","EditFlashcardModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Flashcard","flashcard","updateFlashcardStatus","onCardModified","onEdit","_s","flip","setFlip","height","setHeight","statusMessage","setStatusMessage","isEditing","setIsEditing","frontEl","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","editedQuestion","options","editedAnswer","window","addEventListener","removeEventListener","handleStatusChange","newStatus","id","message","handleEdit","handleSaveEdit","editedId","console","log","handleCancelEdit","className","style","onClick","children","ref","onSave","onClose","fileName","_jsxFileName","lineNumber","columnNumber","map","option","lastModified","answer","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/flash_card_app-main/src/Flashcard.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport EditFlashcardModal from './EditFlashcardModal'; \n\nexport default function Flashcard({ flashcard, updateFlashcardStatus, onCardModified, onEdit }) {\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState('initial');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = backEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight, 100));\n  }\n\n  useEffect(setMaxHeight, [editedQuestion, flashcard.options, editedAnswer]);\n  useEffect(() => {\n    window.addEventListener('resize', setMaxHeight);\n    return () => window.removeEventListener('resize', setMaxHeight);\n  }, []);\n\n  const handleStatusChange = (newStatus) => {\n    updateFlashcardStatus(flashcard.id, newStatus);\n    onCardModified(flashcard.id);\n\n    let message = '';\n    switch (newStatus) {\n      case 'Learned':\n        message = 'Status: Learned';\n        break;\n      case 'Want to Learn':\n        message = 'Status: Want to Learn';\n        break;\n      case 'Noted':\n        message = 'Status: Noted';\n        break;\n      default:\n        message = '';\n    }\n    setStatusMessage(message);\n  };\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleSaveEdit = (editedId, editedQuestion, editedAnswer) => {\n    // Implement your logic to save the edited question and answer\n    console.log(`Edited Flashcard ID: ${editedId}`);\n    console.log(`Edited Question: ${editedQuestion}`);\n    console.log(`Edited Answer: ${editedAnswer}`);\n\n    // Reset the editing state\n    setIsEditing(false);\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div\n      className={`card ${flip ? 'flip' : ''}`}\n      style={{ height: height }}\n      onClick={() => setFlip(!flip)}\n    >\n      <div className=\"front\" ref={frontEl}>\n        {isEditing ? (\n          <EditFlashcardModal\n            flashcard={flashcard}\n            onSave={handleSaveEdit}\n            onClose={handleCancelEdit}\n          />\n        ) : (\n          <>\n            <div className=\"flashcard-options\">\n              {flashcard.options.map((option) => (\n                <div className=\"flashcard-option\" key={option}>\n                  {option}\n                </div>\n              ))}\n            </div>\n            <p>Last Modified: {flashcard.lastModified}</p>\n            <div className=\"status-buttons\">\n              <button onClick={() => handleStatusChange('Learned')}>Learned</button>\n              <button onClick={() => handleStatusChange('Want to Learn')}>Want to Learn</button>\n              <button onClick={() => handleStatusChange('Noted')}>Noted</button>\n              <button onClick={handleEdit}>Edit</button>\n            </div>\n\n            {statusMessage && <p>{statusMessage}</p>}\n          </>\n        )}\n      </div>\n      <div className=\"back\" ref={backEl}>\n        {flashcard.answer}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}